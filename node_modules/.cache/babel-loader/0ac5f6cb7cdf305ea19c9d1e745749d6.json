{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { OrbitControls as OrbitControls$1 } from 'three-stdlib';\nconst OrbitControls = /*#__PURE__*/React.forwardRef(({\n  makeDefault,\n  camera,\n  regress,\n  domElement,\n  enableDamping = true,\n  onChange,\n  onStart,\n  onEnd,\n  ...restProps\n}, ref) => {\n  const invalidate = useThree(({\n    invalidate\n  }) => invalidate);\n  const defaultCamera = useThree(({\n    camera\n  }) => camera);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const events = useThree(({\n    events\n  }) => events);\n  const set = useThree(({\n    set\n  }) => set);\n  const get = useThree(({\n    get\n  }) => get);\n  const performance = useThree(({\n    performance\n  }) => performance);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || (typeof events.connected !== 'boolean' ? events.connected : gl.domElement);\n  const controls = React.useMemo(() => new OrbitControls$1(explCamera), [explCamera]);\n  useFrame(() => {\n    if (controls.enabled) controls.update();\n  });\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (regress) performance.regress();\n      if (onChange) onChange(e);\n    };\n\n    controls.connect(explDomElement);\n    controls.addEventListener('change', callback);\n    if (onStart) controls.addEventListener('start', onStart);\n    if (onEnd) controls.addEventListener('end', onEnd);\n    return () => {\n      controls.removeEventListener('change', callback);\n      if (onStart) controls.removeEventListener('start', onStart);\n      if (onEnd) controls.removeEventListener('end', onEnd);\n      controls.dispose();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [explDomElement, onChange, onStart, onEnd, regress, controls, invalidate]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      // @ts-expect-error new in @react-three/fiber@7.0.5\n      const old = get().controls; // @ts-expect-error new in @react-three/fiber@7.0.5\n\n      set({\n        controls\n      }); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n      return () => set({\n        controls: old\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls,\n    enableDamping: enableDamping\n  }, restProps));\n});\nexport { OrbitControls };","map":{"version":3,"sources":["/Users/michaelrodriguez/Documents/OnlineProjects/Code/BrecklynsWebsite/portfolio/node_modules/@react-three/drei/core/OrbitControls.js"],"names":["_extends","useThree","useFrame","React","OrbitControls","OrbitControls$1","forwardRef","makeDefault","camera","regress","domElement","enableDamping","onChange","onStart","onEnd","restProps","ref","invalidate","defaultCamera","gl","events","set","get","performance","explCamera","explDomElement","connected","controls","useMemo","enabled","update","useEffect","callback","e","connect","addEventListener","removeEventListener","dispose","old","createElement","object"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { OrbitControls as OrbitControls$1 } from 'three-stdlib';\n\nconst OrbitControls = /*#__PURE__*/React.forwardRef(({\n  makeDefault,\n  camera,\n  regress,\n  domElement,\n  enableDamping = true,\n  onChange,\n  onStart,\n  onEnd,\n  ...restProps\n}, ref) => {\n  const invalidate = useThree(({\n    invalidate\n  }) => invalidate);\n  const defaultCamera = useThree(({\n    camera\n  }) => camera);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const events = useThree(({\n    events\n  }) => events);\n  const set = useThree(({\n    set\n  }) => set);\n  const get = useThree(({\n    get\n  }) => get);\n  const performance = useThree(({\n    performance\n  }) => performance);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || (typeof events.connected !== 'boolean' ? events.connected : gl.domElement);\n  const controls = React.useMemo(() => new OrbitControls$1(explCamera), [explCamera]);\n  useFrame(() => {\n    if (controls.enabled) controls.update();\n  });\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (regress) performance.regress();\n      if (onChange) onChange(e);\n    };\n\n    controls.connect(explDomElement);\n    controls.addEventListener('change', callback);\n    if (onStart) controls.addEventListener('start', onStart);\n    if (onEnd) controls.addEventListener('end', onEnd);\n    return () => {\n      controls.removeEventListener('change', callback);\n      if (onStart) controls.removeEventListener('start', onStart);\n      if (onEnd) controls.removeEventListener('end', onEnd);\n      controls.dispose();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [explDomElement, onChange, onStart, onEnd, regress, controls, invalidate]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      // @ts-expect-error new in @react-three/fiber@7.0.5\n      const old = get().controls; // @ts-expect-error new in @react-three/fiber@7.0.5\n\n      set({\n        controls\n      }); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n      return () => set({\n        controls: old\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls,\n    enableDamping: enableDamping\n  }, restProps));\n});\n\nexport { OrbitControls };\n"]},"metadata":{},"sourceType":"module"}