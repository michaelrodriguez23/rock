{"ast":null,"code":"var _jsxFileName = \"/Users/michaelrodriguez/Documents/OnlineProjects/Code/BrecklynsWebsite/portfolio/src/components/Rock/Rock.jsx\";\nimport React, { Component } from 'react';\nimport * as THREE from \"three\";\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Rock extends Component {\n  componentDidMount() {\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    var renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    this.mount.appendChild(renderer.domElement);\n    var geometry = new THREE.BoxGeometry(1, 1, 1);\n    var material = new THREE.MeshStandardMaterial({\n      color: 0x7e31eb\n    });\n    const light = new THREE.HemisphereLight(0xffffbb, 0x080820, 1);\n    scene.add(light);\n    camera.position.z = 2;\n    let loader = new GLTFLoader();\n    loader.load('scene', function (gltf) {\n      scene.add(gltf.scene);\n      renderer.render(scene, camera);\n    });\n\n    var animate = function () {\n      requestAnimationFrame(animate);\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      cube.rotation.z += 0.01;\n      renderer.render(scene, camera);\n    };\n\n    animate();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref => this.mount = ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Rock;","map":{"version":3,"sources":["/Users/michaelrodriguez/Documents/OnlineProjects/Code/BrecklynsWebsite/portfolio/src/components/Rock/Rock.jsx"],"names":["React","Component","THREE","GLTFLoader","Rock","componentDidMount","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","mount","appendChild","domElement","geometry","BoxGeometry","material","MeshStandardMaterial","color","light","HemisphereLight","add","position","z","loader","load","gltf","render","animate","requestAnimationFrame","cube","rotation","x","y","ref"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,uCAA3B;;;AACA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAGzBI,EAAAA,iBAAiB,GAAG;AAEhB,QAAIC,KAAK,GAAG,IAAIJ,KAAK,CAACK,KAAV,EAAZ;AACA,QAAIC,MAAM,GAAG,IAAIN,KAAK,CAACO,iBAAV,CAA6B,EAA7B,EAAiCC,MAAM,CAACC,UAAP,GAAkBD,MAAM,CAACE,WAA1D,EAAuE,GAAvE,EAA4E,IAA5E,CAAb;AACA,QAAIC,QAAQ,GAAG,IAAIX,KAAK,CAACY,aAAV,EAAf;AACAD,IAAAA,QAAQ,CAACE,OAAT,CAAkBL,MAAM,CAACC,UAAzB,EAAqCD,MAAM,CAACE,WAA5C;AACA,SAAKI,KAAL,CAAWC,WAAX,CAAwBJ,QAAQ,CAACK,UAAjC;AAEA,QAAIC,QAAQ,GAAG,IAAIjB,KAAK,CAACkB,WAAV,CAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B,CAAf;AACA,QAAIC,QAAQ,GAAG,IAAInB,KAAK,CAACoB,oBAAV,CAAgC;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAhC,CAAf;AAGA,UAAMC,KAAK,GAAG,IAAItB,KAAK,CAACuB,eAAV,CAA2B,QAA3B,EAAqC,QAArC,EAA+C,CAA/C,CAAd;AACAnB,IAAAA,KAAK,CAACoB,GAAN,CAAWF,KAAX;AACRhB,IAAAA,MAAM,CAACmB,QAAP,CAAgBC,CAAhB,GAAoB,CAApB;AAEA,QAAIC,MAAM,GAAG,IAAI1B,UAAJ,EAAb;AACA0B,IAAAA,MAAM,CAACC,IAAP,CAAY,OAAZ,EAAqB,UAASC,IAAT,EAAc;AAC/BzB,MAAAA,KAAK,CAACoB,GAAN,CAAUK,IAAI,CAACzB,KAAf;AACAO,MAAAA,QAAQ,CAACmB,MAAT,CAAgB1B,KAAhB,EAAsBE,MAAtB;AACH,KAHD;;AAMA,QAAIyB,OAAO,GAAG,YAAY;AACdC,MAAAA,qBAAqB,CAAED,OAAF,CAArB;AACAE,MAAAA,IAAI,CAACC,QAAL,CAAcC,CAAd,IAAmB,IAAnB;AACAF,MAAAA,IAAI,CAACC,QAAL,CAAcE,CAAd,IAAmB,IAAnB;AACAH,MAAAA,IAAI,CAACC,QAAL,CAAcR,CAAd,IAAmB,IAAnB;AACAf,MAAAA,QAAQ,CAACmB,MAAT,CAAiB1B,KAAjB,EAAwBE,MAAxB;AACH,KANT;;AAOQyB,IAAAA,OAAO;AAEV;;AAGDD,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,GAAG,EAAEO,GAAG,IAAK,KAAKvB,KAAL,GAAauB;AAA/B;AAAA;AAAA;AAAA;AAAA,YADJ;AAIH;;AA3CwB;;AA8C7B,eAAenC,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport * as THREE from \"three\";\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nclass Rock extends Component {\n\n\n    componentDidMount() {\n\n        var scene = new THREE.Scene();\n        var camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );\n        var renderer = new THREE.WebGLRenderer();\n        renderer.setSize( window.innerWidth, window.innerHeight );\n        this.mount.appendChild( renderer.domElement );\n      \n        var geometry = new THREE.BoxGeometry( 1, 1, 1 );\n        var material = new THREE.MeshStandardMaterial( { color: 0x7e31eb } );\n    \n \n        const light = new THREE.HemisphereLight( 0xffffbb, 0x080820, 1 );\n        scene.add( light );\ncamera.position.z = 2;\n\nlet loader = new GLTFLoader(); \nloader.load('scene', function(gltf){\n    scene.add(gltf.scene);\n    renderer.render(scene,camera);\n});\n\n\nvar animate = function () {\n            requestAnimationFrame( animate );\n            cube.rotation.x += 0.01;\n            cube.rotation.y += 0.01;\n            cube.rotation.z += 0.01;\n            renderer.render( scene, camera );\n        };\n        animate();\n        \n    }\n\n   \n    render() {\n        return (\n            <div ref={ref => (this.mount = ref)} />\n         \n        )\n    }\n}\n\nexport default Rock;"]},"metadata":{},"sourceType":"module"}